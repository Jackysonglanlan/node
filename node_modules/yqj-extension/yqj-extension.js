// 

/////////// Promise ///////////

/**
 * Execute promises serially.
 *
 * @param promiseList [Promise1, Promise2, ...]
 */
Promise.serialAll = function(promiseList) {
  return promiseList.reduce((start, promise) => {
    return start.return(promise);
  }, Promise.resolve());
};

/////////// Array ///////////

Array.prototype.yqjMove = function(old_index, new_index) {
  if (new_index >= this.length) {
    var k = new_index - this.length;
    while ((k--) + 1) {
      this.push(undefined);
    }
  }
  this.splice(new_index, 0, this.splice(old_index, 1)[0]);
  return this; // for testing purposes
};

Array.prototype.yqjClean = function() {
  this.length = 0;
};

Array.prototype.yqjIsEmpty = function() {
  return this.length === 0;
};

String.prototype.replaceAll = function(t, r) {
  return this.split(t).join(r);
};

_.isObjectId = (id) => /^[a-f\d]{24}/.test(id);


//